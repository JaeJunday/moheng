# Nginx에서 백엔드 서버 그룹을 정의하는 부분
upstream backend {
    server backend:8080;  # 백엔드 서버의 주소와 포트
    # server back:8081;
    # server back:8082;
}

server {

    # ssl_protocols TLSv1.2 TLSv1.3; # duplicated in /etc/letsencrypt/options-ssl-nginx.conf

    server_name moheng.xyz www.moheng.xyz;

    client_max_body_size 32M; # 또는 적절한 크기로 설정
    sendfile        on;
    keepalive_timeout  60;

    location / {
        root   /usr/share/nginx/html;
        index  index.html index.html;
        try_files $uri $uri/ /$uri $uri.html /$uri.html $uri/index.html /404.html;
    }

    location ~* ^/(api|docs)/ {
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_pass http://backend;
        proxy_buffering off; # 프록시 버퍼링 비활성화        
        access_log off; #로그 출력 안함
    }

    location ~ /\.well-known/acme-challenge/ {
        allow all;
        root /var/www/letsencrypt;
    }

    listen [::]:443 ssl ipv6only=on; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/moheng.xyz/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/moheng.xyz/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot


}


server {
    if ($host = www.moheng.xyz) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = moheng.xyz) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen 80 reuseport;
    listen [::]:80 reuseport;

    server_name moheng.xyz www.moheng.xyz;
    return 404; # managed by Certbot




}